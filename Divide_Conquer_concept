주어진 문제를 둘 이상의 부분문제로 나눈 뒤 각 문제에 대한 답을 재귀호출을 이용해 계산하고, 각 부분 문제의 답으로부터 전체 문제의 답을 계산
  거의 같은 크기의 부분문제로 나눈다는게 divide_conquer의 주요 특징.
  일반적인 3가지 구성으로 나뉜다.
  divide - 문제를 더 작은 문제로 분할하는 과정.
  merge - 각 문제에 대해 구한 답을 원래 문제에 대한 답으로 병합하는 과정.
  base_case - 더이상 답을 분할 하지 않고 곧장 풀 수 있는 작은 문제.

  ** 분할 정복이 많은 경우 같은 작업을 더 빠르게 처리해 주는데 그러기 위해선
  둘 이상의 부분문제로 나누는 방법이 있어야 하고 부분 문제의 답을 조합해 원래 문제의 답을 계산하는 효율적인 방법이 있어야함.
  효율적인 방법--> 이 부분이 분할정복을 사용하는 근본적인 이유가 되는거 같음.

  ex) merge sort는 전형적인 분할 정복 알고리즘을 이용하는걸로 유명한데, 같은 크기로 계속 반씩 조깨다가 
    다시 합칠 때, 투 포인트를 이용해 크기순으로 나열하게 만든다.
  -> 두 수열을 합쳐 오름차순으로 나열한다고 할 때 두 수열의 정렬 유 무는 시간복잡도 측면에서 n 이냐 n^2 차이가 있음. 
      merge sort는 분할로 제일 작은 단위까지 쪼갠 후 합치면서 수열을 계속 정렬함.   
