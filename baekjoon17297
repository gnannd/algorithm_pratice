/*
백준 17297
메시기모찌 피보나치 수열로 계속 나열되는데 n번쨰 글자를 출력 하는 문제.
n은 약 10억이하다
빠르게 찾는 알고리즘이 필요한데 먼저 피보나치로 구현되는 각 
만들어지는 문자열따라 각 길이 크기를 다이나믹으로 구현했다.
크기가 약 2분의 3 배씩 증가하므로 10억이하 내지로 빠르게 숫자크기 충분히 계산가능.
계산 대충해서 70까지만 구하면 10억 충분히 넘김.
그걸 계산해서 계속찾아가면 되는데  공백을 신경써서 구현하면된다.
쉽게 messi 이렇게 5크기가 아니라 공백을 뒤에 붙여 크기 6으 이런식으로 생각해서 풀면 쉽게 구현된다.
시간복잡도: 최악의 경우 memo크기 70^2 이다. 매우 빠르고 실제로도 거의 0ms 걸렸다.

++ 간과한것
내가 찾는방식을 따라가면 전 피보나치 길이보다 크거나같고 현재 피보나치 보다 길이가 작은 걸 
계속 찾아가서 문자를 빠르게 찾는 방식인데 딱 맞아떨어지면 찾기위해 전 피보나치 길이를 뺄 때 
0이 되게 된다. str[0-1] 이 되기 때문에 예외처리를 해줬어야 했다.
*/

#include <iostream>
#include <vector>

using namespace std;

string str="Messi Gimossi ";

void GetStr(long long n,vector<long long>&memo)
{
    if(n<=14)
    {
        if(n==0 or str[n-1]==' ') //n이 0일 때 예외처리.
            cout<<"Messi Messi Gimossi";
        else
            cout<<str[n-1];
    }
    else{
        for(int i=0;i<70;i++)
        {
            if(memo[i]>n)
            {
                n-=memo[i-1];
                break;
            }
        }
        GetStr(n,memo);
    }
    
}

int main()
{
    int N;
    cin>>N;
    
    vector<long long>memo(70);
    memo[0]=6;
    memo[1]=14;
    for(int i=2;i<70;i++)
    {
        memo[i]=memo[i-2]+memo[i-1];
    }
    GetStr(N,memo);
    
    return 0;
}
