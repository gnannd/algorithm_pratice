알아두면 좋은 기하 알고리즘의 디자인 패턴- 기초적인 기하 알고리즘의 디자인패턴들을 이용하여 복잡한 문제를 해결 할 수 있음.

-평면 스위핑(plane_sweeping)
수평선 혹은 수직선으로 주어진 평면을 '쓸고 지나가면서' 문제를 해결
다음과 같은 유형들에 대해 자주 사용된다.
직사각형 합집합의 면적 구하기 
다각형 교집합 넓이 구하기 
선분들중 교차하는 선분이 있는지 찾아내기.
회전하는 캘리퍼스(볼록 다각형내에 제일 긴 선분 찾기)
 

기하 문제 풀 때 유의 할 점
-퇴화도형 
도형들의 일반적인 경우를 제외한 예외들(ex, 넓이가 0인 다각형, 일직선 상에 있는 세개 이상의 점들 등등)
-> 여러 예외적인 경우들을 잘 생각해 예외처리 해주어야 한다.

-직교 좌표계와 스크린 좌표계 착각 및 실수
->문제에 정의된 좌표계에 대해서 내가 자주 사용하는 좌표계랑 헷갈리지 않게 변환을 거치든 어떻든 일관되게 사용하도록 하는게 좋음

-실수double 범위에서의 오차 실수 (ex, sqrt(음수) , acos(1+10^-7) 등등)
->함수 입력 범위 밖의 값이 오차로 들어오는 것을 방지하고자 sqrt(max(0.0,x)) 와 같이 범위를 제한해두는 습관을 기르는게 좋음
