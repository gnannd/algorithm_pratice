//백준1947 선물 전달
//자기자신에게 주는걸 제외하고 선물을 나누는 모든경우의 수를 구하는 문제
//선물이 n개 있고 각 차례마다 선물을 받는다. 선물을 준 사람이 선물을 받지 않은상태라면 다음차례 선물을 받을 사람이 된다.라고 가정.
//이렇게 가정하면 다음차례는 두가지 경우밖에 없다. 1. 전차례에서 선물을 준사람, 즉 자기 선물이 없어 신경안써도되는 경우
//2.남은 사람들중 선물을 준사람이 없다. 즉 처음과 같은 상황에서 인원수만 줄인경우임.
//type을 두개로 쪼개 다이나믹으로 풀었다. 1번의 경우 남은 사람들의 선물을 선택하지 않는다면 2번의 경우가 되고, 한다면 1번의 경우로 되풀이 된다.
//2번의 경우 다시 자기자신을 제외하고 선물을 받을 것이고 선물을 준사람이 다음차례가 되어 결국 1번의 경우가 될것이다.
//즉, 2가지 상황 과 남은 인원수 에따라 값이 달라지므로 다이나믹을 이용해 풀었다.
//시간복잡도: O(2n) n이 최대 1,000,000으로 시간안에 충분히 풀 수 있었다.


#include <iostream>
#include <cstring>

using namespace std;

#define mod 1000000000

long long cache[2][1000001];

long long get_method(bool type,int n)
{
    if(n==2)
        return 1;
    
    long long &ret=cache[type][n];
    
    if(ret!=-1) return ret;
    
    ret=0;
    if(type==1)
    {
        ret+=get_method(0,n-1)+((n-1)*get_method(1,n-1))%mod;
    }
    else
    {
        ret+=((n-1)*get_method(1,n-1));
    }
    
    return ret%mod;
}

int main()
{
    int n;
    cin>>n;
    
    memset(cache,-1,sizeof(cache));
    
    if(n!=1)
        cout<<get_method(0,n);
    else
        cout<<0;
        
    return 0;
}
