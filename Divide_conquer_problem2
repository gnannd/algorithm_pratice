//백준 5904 Moo 게임
//분할 문제. n이 최대가 10억이여서 문자열을 다풀어서 맞는 값을 찾아내기엔 어려움.
//그래서 문자열을 저장하는게 아니라 크기를 저장해 분할로 찾아가는걸 생각함.
//대충 크기가 2 거듭제곱으로 커진다고 가정해 계산하면, 시간안에 충분히 풀 수 있다는걸 알 수 있음.
//n값이랑 상관없이 lg10억 정도 깊이로 탐색하므로 시간복잡도는 상수시간임. 추가로 병합이 없이 분할로만 탐색하고 값을 반환.

#include <iostream>
#include <vector>

using namespace std;

int n=0; //편의를 위해

char get_ch(vector<int>&s_size,int i)
{
    
    if(i==0)
        return n==1?'m':'o';
    
    if(n<=s_size[i-1])
    {
        return get_ch(s_size,i-1);
    }
    else if(s_size[i-1]<n and n<=s_size[i-1]+i+3)
    {
        return n==s_size[i-1]+1?'m':'o';
    }
    else
    {
        n-=s_size[i-1]+i+3;
        return get_ch(s_size,i-1);
    }
    
}

int main()
{
    cin>>n;
    vector<int>s_size; //미리 크기 계산을 해도 값이 21억이 넘지 않으므로 int 자료형 사용.
    s_size.push_back(3);
    
    while(s_size.back()<1e9) //나올수 있는 최대 크기까지 미리 문자열 크기 계산
    {
        s_size.push_back(s_size.back()*2+s_size.size()+3);
    }
    
    cout<<get_ch(s_size,s_size.size()-1);
    
    return 0;
}
